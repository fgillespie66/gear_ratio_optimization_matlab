function model = getMiniCheetahModel(fb_joint_type)
% This function builds the floating base model of the Mini Cheetah
% quadruped using the conventions of the spatialv2 library
%
% inputs: fb_joint_type - specifies how the floating base of the model will
% be treated. Options: 'eul' = euler angles (six 1 DOF joints), 'quat' =
% quaternions (one 6DOF joint using quaternions), 'SE3' = SE3 (one 6DOF 
% joint using homogeneous transforms)

%% Robot Parameters
bodyMass = 3.3;
bodyLength = 0.19 * 2;
bodyWidth = 0.049 * 2;
bodyHeight = 0.05 * 2;

abadLinkLength = 0.062;
hipLinkLength = 0.209;
kneeLinkLength = 0.195;
% kneeLinkY_offset = 0.004;

abadRotInertia = 1e-6 .* [381, 58, 0.45;...
    58, 560, 0.95;...
    0.45, 0.95, 444];
abadCOM = [0, 0.036, 0];
abadInertia = spatialInertia(0.54, abadCOM, abadRotInertia);

hipRotInertia = 1e-6 .* [1983, 245, 13;...
    245, 2103, 1.5;...
    13, 1.5, 408];
hipCOM = [0, 0.016, -0.02];
hipInertia = spatialInertia(0.634, hipCOM, hipRotInertia);

kneeRotInertia = 1e-6 .* [6, 0, 0;...
    0, 248, 0;...
    0, 0, 245];
kneeCOM = [0, 0, -0.061];
kneeInertia = spatialInertia(0.064, kneeCOM, kneeRotInertia);

bodyRotInertia = 1e-6 .* [11253, 0, 0;...
    0, 36203, 0;...
    0, 0, 42673];
bodyCOM = [0, 0, 0];
bodyInertia = spatialInertia(bodyMass, bodyCOM, bodyRotInertia);

abadLocation = [bodyLength, bodyWidth, 0] * 0.5;
hipLocation = [0, abadLinkLength, 0];
kneeLocation = [0, 0, -hipLinkLength];
footLocation = [0, 0, -kneeLinkLength];

hipSrbmLocation = [0.19 -0.1 0;0.19 0.1 0;...
    -0.19 -0.1 0;-0.19 0.1 0];

robot = struct(...
    'bodyMass',bodyMass,...
    'bodyLength', bodyLength,...
    'bodyWidth', bodyWidth,...
    'bodyHeight',bodyHeight,...
    'bodyInertia',bodyInertia,...
    'abadInertia',abadInertia,...
    'abadLocation',abadLocation,...
    'hipInertia',hipInertia,...
    'hipLocation',hipLocation,...
    'kneeInertia',kneeInertia,...
    'kneeLocation',kneeLocation,...
    'footLocation',footLocation,...
    'hipSrbmLocation',hipSrbmLocation,...
    'leg_rad',.02,...
    'abadGearRatio',6.0,...
    'hipGearRatio',6.0,...
    'kneeGearRatio',9.33,...
    'motorKT',0.05,...
    'motorR',0.173,...
    'motorTauMax',3.0,...
    'motorVelMax',240.0,...
    'batteryV',24);

%% Build the Model
switch fb_joint_type
    case 'eul'
        model = buildQuadrupedModel(robot);
    case 'quat'
        model = buildQuadrupedModel_Quat(robot);
    case 'SE3'
        error('SE3 floating base model not ready yet')
    otherwise
        error('Invalid floating base joint type given')
end
model.name    = 'MiniCheetah';
model.fb_type = fb_joint_type;
model.params  = robot; 



